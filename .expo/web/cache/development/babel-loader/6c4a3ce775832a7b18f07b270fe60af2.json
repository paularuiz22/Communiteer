{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/catherinelee/Documents/gt/cs4261/Communiteer/src/Stats/Analytics.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Picker } from \"@react-native-community/picker\";\nimport MonthlyHours from \"./Charts/MonthlyHours.js\";\nimport Points from \"./Charts/Progress.js\";\nimport TypesJobs from \"./Charts/TypesJobs.js\";\nvar window = Dimensions.get(\"window\");\nvar screen = Dimensions.get(\"screen\");\n\nvar Analytics = function (_Component) {\n  _inherits(Analytics, _Component);\n\n  var _super = _createSuper(Analytics);\n\n  function Analytics() {\n    var _this;\n\n    _classCallCheck(this, Analytics);\n\n    _this = _super.call(this);\n\n    _this.onChange = function (_ref) {\n      var window = _ref.window,\n          screen = _ref.screen;\n\n      _this.setState({\n        dimensions: {\n          window: window,\n          screen: screen\n        }\n      });\n    };\n\n    _this.handleChangeGraph = function (event) {\n      _this.setState({\n        graph: event\n      });\n    };\n\n    _this.state = {\n      graph: \"points\",\n      dimensions: {\n        window: window,\n        screen: screen\n      }\n    };\n    _this.handleChangeGraph = _this.handleChangeGraph.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Analytics, [{\n    key: \"switchTitle\",\n    value: function switchTitle() {\n      switch (this.state.graph) {\n        case null:\n        case \"points\":\n          return \"Points Progress\";\n\n        case \"types of jobs\":\n          return \"Types of Jobs\";\n\n        case \"hours per month\":\n          return \"Hours Per Month\";\n      }\n    }\n  }, {\n    key: \"switchGraph\",\n    value: function switchGraph() {\n      switch (this.state.graph) {\n        case null:\n        case \"points\":\n          return React.createElement(Points, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 16\n            }\n          });\n\n        case \"types of jobs\":\n          return React.createElement(TypesJobs, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 16\n            }\n          });\n\n        case \"hours per month\":\n          return React.createElement(MonthlyHours, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 16\n            }\n          });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Dimensions.addEventListener(\"change\", this.onChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Dimensions.removeEventListener(\"change\", this.onChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dimensions = this.state.dimensions;\n      return React.createElement(SafeAreaView, {\n        style: styles.dropdown_container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, React.createElement(Picker, {\n        selectedValue: this.state.language,\n        style: styles.dropdown,\n        onValueChange: this.handleChangeGraph,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Points Status\",\n        value: \"points\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Number of Volunteering Hours per Month\",\n        value: \"hours per month\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Types of Jobs\",\n        value: \"types of jobs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }))), React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, this.switchTitle(), \" \")), React.createElement(View, {\n        style: styles.graph,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, this.switchGraph()));\n    }\n  }]);\n\n  return Analytics;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  dropdown_container: {\n    flex: 1\n  },\n  dropdown: {\n    height: 50,\n    width: screen.width / 2\n  },\n  title: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 30,\n    marginTop: 0,\n    width: screen.width / 2\n  },\n  graph: {\n    flex: 3,\n    backgroundColor: \"red\",\n    width: screen.width / 2,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Analytics;","map":{"version":3,"sources":["/Users/catherinelee/Documents/gt/cs4261/Communiteer/src/Stats/Analytics.js"],"names":["React","Component","Picker","MonthlyHours","Points","TypesJobs","window","Dimensions","get","screen","Analytics","onChange","setState","dimensions","handleChangeGraph","event","graph","state","bind","addEventListener","removeEventListener","styles","dropdown_container","container","language","dropdown","title","switchTitle","switchGraph","StyleSheet","create","flex","alignItems","justifyContent","height","width","textAlign","fontWeight","fontSize","marginTop","backgroundColor"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAEA,SAAQC,MAAR,QAAqB,gCAArB;AAEA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;AACA,IAAMC,MAAM,GAAGF,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;;IAEME,S;;;;;AACJ,uBAAc;AAAA;;AAAA;;AACZ;;AADY,UAWdC,QAXc,GAWH,gBAAwB;AAAA,UAArBL,MAAqB,QAArBA,MAAqB;AAAA,UAAbG,MAAa,QAAbA,MAAa;;AACjC,YAAKG,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE;AAAEP,UAAAA,MAAM,EAANA,MAAF;AAAUG,UAAAA,MAAM,EAANA;AAAV;AAAd,OAAd;AACD,KAba;;AAAA,UAedK,iBAfc,GAeM,UAACC,KAAD,EAAW;AAC7B,YAAKH,QAAL,CAAc;AAACI,QAAAA,KAAK,EAAED;AAAR,OAAd;AACD,KAjBa;;AAEZ,UAAKE,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,QADI;AAEXH,MAAAA,UAAU,EAAE;AACVP,QAAAA,MAAM,EAANA,MADU;AAEVG,QAAAA,MAAM,EAANA;AAFU;AAFD,KAAb;AAOA,UAAKK,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBI,IAAvB,+BAAzB;AATY;AAUb;;;;kCAQa;AACZ,cAAO,KAAKD,KAAL,CAAWD,KAAlB;AACE,aAAK,IAAL;AACA,aAAK,QAAL;AACE,iBAAO,iBAAP;;AACF,aAAK,eAAL;AACE,iBAAO,eAAP;;AACF,aAAK,iBAAL;AACE,iBAAO,iBAAP;AAPJ;AASD;;;kCACa;AACZ,cAAO,KAAKC,KAAL,CAAWD,KAAlB;AACE,aAAK,IAAL;AACA,aAAK,QAAL;AACE,iBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF,aAAK,eAAL;AACE,iBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF,aAAK,iBAAL;AACE,iBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAPJ;AASD;;;wCAEmB;AAClBT,MAAAA,UAAU,CAACY,gBAAX,CAA4B,QAA5B,EAAsC,KAAKR,QAA3C;AACD;;;2CAEsB;AACrBJ,MAAAA,UAAU,CAACa,mBAAX,CAA+B,QAA/B,EAAyC,KAAKT,QAA9C;AACD;;;6BAEQ;AAAA,UACCE,UADD,GACgB,KAAKI,KADrB,CACCJ,UADD;AAEP,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEQ,MAAM,CAACC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAID,MAAM,CAACE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AACE,QAAA,aAAa,EAAE,KAAKN,KAAL,CAAWO,QAD5B;AAEE,QAAA,KAAK,EAAEH,MAAM,CAACI,QAFhB;AAGE,QAAA,aAAa,EAAI,KAAKX,iBAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,eAAnB;AAAmC,QAAA,KAAK,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,wCAAnB;AAA4D,QAAA,KAAK,EAAC,iBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,eAAnB;AAAmC,QAAA,KAAK,EAAG,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADA,CADF,EAWE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIO,MAAM,CAACE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIF,MAAM,CAACK,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKC,WAAL,EAA9B,MADF,CAXF,EAcE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIN,MAAM,CAACL,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKY,WAAL,EADF,CAdF,CADF;AAoBD;;;;EAxEqB3B,S;;AA2ExB,IAAMoB,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BX,EAAAA,kBAAkB,EAAE;AAClBS,IAAAA,IAAI,EAAE;AADY,GANW;AAS/BN,EAAAA,QAAQ,EAAE;AACRS,IAAAA,MAAM,EAAE,EADA;AAERC,IAAAA,KAAK,EAAE1B,MAAM,CAAC0B,KAAP,GAAa;AAFZ,GATqB;AAa/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,SAAS,EAAE,CAJN;AAKLJ,IAAAA,KAAK,EAAE1B,MAAM,CAAC0B,KAAP,GAAa;AALf,GAbwB;AAoB/BnB,EAAAA,KAAK,EAAE;AACLe,IAAAA,IAAI,EAAE,CADD;AAELS,IAAAA,eAAe,EAAC,KAFX;AAGLL,IAAAA,KAAK,EAAE1B,MAAM,CAAC0B,KAAP,GAAa,CAHf;AAILH,IAAAA,UAAU,EAAE,QAJP;AAKLC,IAAAA,cAAc,EAAE;AALX;AApBwB,CAAlB,CAAf;AA4BA,eAAevB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Dimensions, StyleSheet, ScrollView, Button, View, SafeAreaView, Text, Alert } from \"react-native\";\nimport {Picker} from \"@react-native-community/picker\";\n\nimport MonthlyHours from \"./Charts/MonthlyHours.js\";\nimport Points from \"./Charts/Progress.js\";\nimport TypesJobs from \"./Charts/TypesJobs.js\";\n\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nclass Analytics extends Component {\n  constructor() {\n    super();\n    this.state = {\n      graph: \"points\",\n      dimensions: {\n        window,\n        screen\n      }\n    };\n    this.handleChangeGraph = this.handleChangeGraph.bind(this);\n  }\n  onChange = ({ window, screen }) => {\n    this.setState({ dimensions: { window, screen } });\n  };\n\n  handleChangeGraph = (event) => {\n    this.setState({graph: event});\n  }\n  switchTitle() {\n    switch(this.state.graph) {\n      case null:\n      case \"points\":\n        return \"Points Progress\";\n      case \"types of jobs\":\n        return \"Types of Jobs\"\n      case \"hours per month\":\n        return \"Hours Per Month\";\n    }\n  }\n  switchGraph() {\n    switch(this.state.graph) {\n      case null:\n      case \"points\":\n        return <Points/>;\n      case \"types of jobs\":\n        return <TypesJobs/>\n      case \"hours per month\":\n        return <MonthlyHours/>;\n    }\n  }\n\n  componentDidMount() {\n    Dimensions.addEventListener(\"change\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Dimensions.removeEventListener(\"change\", this.onChange);\n  }\n  \n  render() {\n    const { dimensions } = this.state;\n    return(\n      <SafeAreaView style={styles.dropdown_container}>\n        <View style = {styles.container}>\n        <Picker\n          selectedValue={this.state.language}\n          style={styles.dropdown}\n          onValueChange = {this.handleChangeGraph}>\n          <Picker.Item label=\"Points Status\" value=\"points\"/>\n          <Picker.Item label=\"Number of Volunteering Hours per Month\" value=\"hours per month\" />\n          <Picker.Item label=\"Types of Jobs\" value = \"types of jobs\"/>\n        </Picker>\n        </View>\n        <View style = {styles.container}>\n          <Text style = {styles.title}>{this.switchTitle()} </Text>\n        </View>\n        <View style = {styles.graph}>\n         {this.switchGraph()}\n        </View>\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  dropdown_container: {\n    flex: 1,\n  },\n  dropdown: {\n    height: 50,\n    width: screen.width/2,\n  },\n  title: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 30,\n    marginTop: 0,\n    width: screen.width/2,\n  },\n  graph: {\n    flex: 3, \n    backgroundColor:\"red\",\n    width: screen.width/2,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\nexport default Analytics;\n"]},"metadata":{},"sourceType":"module"}