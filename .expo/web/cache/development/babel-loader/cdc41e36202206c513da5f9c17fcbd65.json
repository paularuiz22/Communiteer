{"ast":null,"code":"var _jsxFileName = \"/Users/catherinelee/Documents/gt/cs4261/Communiteer/src/Stats/Analytics.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nfunction Analytics() {\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"The title and onPress handler are required. It is recommended to set accessibilityLabel to help make your app usable by everyone.\"), React.createElement(Button, {\n    title: \"Press me\",\n    onPress: function onPress() {\n      return Alert.alert(\"Simple Button pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Adjust the color in a way that looks standard on each platform. On  iOS, the color prop controls the color of the text. On Android, the color adjusts the background color of the button.\"), React.createElement(Button, {\n    title: \"Press me\",\n    color: \"#f194ff\",\n    onPress: function onPress() {\n      return Alert.alert(\"Button with adjusted color pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"All interaction for the component are disabled.\"), React.createElement(Button, {\n    title: \"Press me\",\n    disabled: true,\n    onPress: function onPress() {\n      return Alert.alert(\"Cannot press this one\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"This layout strategy lets the title define the width of the button.\"), React.createElement(View, {\n    style: styles.fixToText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Left button\",\n    onPress: function onPress() {\n      return Alert.alert(\"Left button pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Right button\",\n    onPress: function onPress() {\n      return Alert.alert(\"Right button pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    marginHorizontal: 16\n  },\n  title: {\n    textAlign: \"center\",\n    marginVertical: 8\n  },\n  fixToText: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: \"#737373\",\n    borderBottomWidth: StyleSheet.hairlineWidth\n  }\n});\nexport default Analytics;","map":{"version":3,"sources":["/Users/catherinelee/Documents/gt/cs4261/Communiteer/src/Stats/Analytics.js"],"names":["React","Analytics","styles","container","title","Alert","alert","fixToText","StyleSheet","create","flex","justifyContent","marginHorizontal","textAlign","marginVertical","flexDirection","separator","borderBottomColor","borderBottomWidth","hairlineWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Button, View, SafeAreaView, Text, Alert } from \"react-native\";\n\nfunction Analytics() {\n  return(\n    <SafeAreaView style={styles.container}>\n      <View>\n        <Text style={styles.title}>\n            The title and onPress handler are required. It is recommended to set accessibilityLabel to help make your app usable by everyone.\n        </Text>\n        <Button\n          title=\"Press me\"\n          onPress={() => Alert.alert(\"Simple Button pressed\")}\n        />\n      </View>\n      <View>\n        <Text style={styles.title}>\n            Adjust the color in a way that looks standard on each platform. On  iOS, the color prop controls the color of the text. On Android, the color adjusts the background color of the button.\n        </Text>\n        <Button\n          title=\"Press me\"\n          color=\"#f194ff\"\n          onPress={() => Alert.alert(\"Button with adjusted color pressed\")}\n        />\n      </View>\n      <View>\n        <Text style={styles.title}>\n            All interaction for the component are disabled.\n        </Text>\n        <Button\n          title=\"Press me\"\n          disabled\n          onPress={() => Alert.alert(\"Cannot press this one\")}\n        />\n      </View>\n      <View>\n        <Text style={styles.title}>\n            This layout strategy lets the title define the width of the button.\n        </Text>\n        <View style={styles.fixToText}>\n          <Button\n            title=\"Left button\"\n            onPress={() => Alert.alert(\"Left button pressed\")}\n          />\n          <Button\n            title=\"Right button\"\n            onPress={() => Alert.alert(\"Right button pressed\")}\n          />\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    marginHorizontal: 16,\n  },\n  title: {\n    textAlign: \"center\",\n    marginVertical: 8,\n  },\n  fixToText: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: \"#737373\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n});\n\nexport default Analytics;\n"]},"metadata":{},"sourceType":"module"}