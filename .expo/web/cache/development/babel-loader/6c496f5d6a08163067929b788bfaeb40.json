{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/catherinelee/Documents/gt/cs4261/Communiteer/src/Stats/Analytics.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Picker } from \"@react-native-community/picker\";\nimport MonthlyHours from \"./Charts/MonthlyHours.js\";\nimport Points from \"./Charts/Points.js\";\nimport TypesJobs from \"./Charts/TypesJobs.js\";\n\nvar Analytics = function (_Component) {\n  _inherits(Analytics, _Component);\n\n  var _super = _createSuper(Analytics);\n\n  function Analytics() {\n    var _this;\n\n    _classCallCheck(this, Analytics);\n\n    _this = _super.call(this);\n    _this.state = {\n      clicked: []\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleOutsideClick = _this.handleOutsideClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Analytics, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(index, e) {\n      var clicked = this.state.clicked;\n      clicked[index] = !clicked[index];\n      this.setState({\n        clicked: clicked\n      });\n    }\n  }, {\n    key: \"handleOutsideClick\",\n    value: function handleOutsideClick(event) {\n      if (!this.refs.megaMenu.contains(event.target)) {\n        this.setState({\n          clicked: []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, React.createElement(Picker, {\n        selectedValue: this.state.clicked,\n        style: {\n          height: 50,\n          width: 100\n        },\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this2.setState({\n            language: itemValue\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Points Status\",\n        value: \"points\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Number of Volunteering Hours per Month\",\n        value: \"hours per month\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Types of Jobs\",\n        value: \"types of jobs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      })), React.createElement(Points, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Analytics;\n}(Component);\n\nexport default Analytics;","map":{"version":3,"sources":["/Users/catherinelee/Documents/gt/cs4261/Communiteer/src/Stats/Analytics.js"],"names":["React","Component","Picker","MonthlyHours","Points","TypesJobs","Analytics","state","clicked","handleClick","bind","handleOutsideClick","document","addEventListener","removeEventListener","index","e","setState","event","refs","megaMenu","contains","target","styles","container","height","width","itemValue","itemIndex","language"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,SAAQC,MAAR,QAAqB,gCAArB;AAEA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;;IA4DMC,S;;;;;AACJ,uBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,+BAA1B;AANY;AAOb;;;;yCAEoB;AACnBE,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKF,kBAAxC,EAA4D,KAA5D;AACD;;;2CAEqB;AACpBC,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,KAAKH,kBAA3C,EAA+D,KAA/D;AACD;;;gCACWI,K,EAAMC,C,EAAG;AACnB,UAAIR,OAAO,GAAC,KAAKD,KAAL,CAAWC,OAAvB;AACAA,MAAAA,OAAO,CAACO,KAAD,CAAP,GAAe,CAACP,OAAO,CAACO,KAAD,CAAvB;AACA,WAAKE,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAEA;AAAV,OAAd;AACD;;;uCACkBU,K,EAAM;AACvB,UAAI,CAAC,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,QAAnB,CAA4BH,KAAK,CAACI,MAAlC,CAAL,EAAgD;AAC9C,aAAKL,QAAL,CAAc;AACZT,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF;;;6BACQ;AAAA;;AACP,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEe,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,aAAa,EAAE,KAAKjB,KAAL,CAAWC,OAD5B;AAEE,QAAA,KAAK,EAAE;AAACiB,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,KAAK,EAAE;AAApB,SAFT;AAGE,QAAA,aAAa,EAAE,uBAACC,SAAD,EAAYC,SAAZ;AAAA,iBACb,MAAI,CAACX,QAAL,CAAc;AAACY,YAAAA,QAAQ,EAAEF;AAAX,WAAd,CADa;AAAA,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,eAAnB;AAAmC,QAAA,KAAK,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE,oBAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,wCAAnB;AAA4D,QAAA,KAAK,EAAC,iBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,eAAnB;AAAmC,QAAA,KAAK,EAAG,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,EAWE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF;AA8BD;;;;EA5DqB1B,S;;AA8DxB,eAAeK,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, ScrollView, Button, View, SafeAreaView, Text, Alert } from \"react-native\";\nimport {Picker} from \"@react-native-community/picker\";\n\nimport MonthlyHours from \"./Charts/MonthlyHours.js\";\nimport Points from \"./Charts/Points.js\";\nimport TypesJobs from \"./Charts/TypesJobs.js\";\n\n// class Analytics extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       graph: \"points\",\n//     };\n//     this.graph = this.graph.bind(this);\n//     this.handleClick = this.handleClick.bind(this);\n//   }\n\n//   graphSelect(event) {\n//     event.preventDefault();\n    \n//     this.setState(() => {\n//       document.addEventListener('click', this.closeMenu);\n//     });\n//   }\n//   render() {\n//     return(\n//       <SafeAreaView style={styles.container}>\n//         <Picker\n//           selectedValue={this.state.language}\n//           style={{height: 50, width: 100}}\n//           onValueChange={(itemValue, itemIndex) =>\n//             this.setState({language: itemValue})\n//           }>\n//           <Picker.Item label=\"Points Status\" value=\"points\" />\n//           <Picker.Item label=\"Number of Volunteering Hours per Month\" value=\"hours per month\" />\n//           <Picker.Item label=\"Types of Jobs\" value = \"types of jobs\"/>\n//         </Picker>\n//         <Points/>\n//       </SafeAreaView>\n//     );\n//   }\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     marginHorizontal: 16,\n//   },\n//   title: {\n//     textAlign: \"center\",\n//     marginVertical: 8,\n//   },\n//   fixToText: {\n//     flexDirection: \"row\",\n//     justifyContent: \"space-between\",\n//   },\n//   separator: {\n//     marginVertical: 8,\n//     borderBottomColor: \"#737373\",\n//     borderBottomWidth: StyleSheet.hairlineWidth,\n//   },\n// });\n\n// export default Analytics;\nclass Analytics extends Component {\n  constructor() {\n    super();\n    this.state = {\n      clicked: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n    \n  componentWillMount() {\n    document.addEventListener(\"click\", this.handleOutsideClick, false);\n  }\n  \n  componentWillUnmount(){\n    document.removeEventListener(\"click\", this.handleOutsideClick, false);\n  }\n  handleClick(index,e) {\n    let clicked=this.state.clicked;\n    clicked[index]=!clicked[index];\n    this.setState({clicked: clicked});\n  }\n  handleOutsideClick(event){\n    if (!this.refs.megaMenu.contains(event.target)) {\n      this.setState({\n        clicked: []\n      });\n    } \n  }\n  render() {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Picker\n          selectedValue={this.state.clicked}\n          style={{height: 50, width: 100}}\n          onValueChange={(itemValue, itemIndex) =>\n            this.setState({language: itemValue})\n          }>\n          <Picker.Item label=\"Points Status\" value=\"points\" />\n          <Picker.Item label=\"Number of Volunteering Hours per Month\" value=\"hours per month\" />\n          <Picker.Item label=\"Types of Jobs\" value = \"types of jobs\"/>\n        </Picker>\n        <Points/>\n      </SafeAreaView>\n\n    //   <div className=\"container\">\n    //     <div className=\"menu-bar\">\n            \n    //       <div className=\"menu-bar-item\" ref=\"megaMenu\">\n    //         <a className=\"menu-bar-link\" href=\"#\" onClick={this.handleClick.bind(this,0)}>First Menu</a>\n    //         <div className={\"mega-menu\"+\" \"+this.state.clicked[0]}>\n    //           <div className=\"mega-menu-content\">\n    //             <p>First Menu</p>\n    //           </div>\n    //         </div>\n    //       </div>\n            \n    //     </div>\n    //   </div>\n    );\n  }\n}\nexport default Analytics;"]},"metadata":{},"sourceType":"module"}