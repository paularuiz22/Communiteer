{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/catherinelee/Documents/gt/cs4261/Communiteer/src/Stats/Charts/Progress.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { PieChart } from \"react-native-svg-charts\";\nvar window = Dimensions.get(\"window\");\nvar screen = Dimensions.get(\"screen\");\n\nvar Points = function (_React$PureComponent) {\n  _inherits(Points, _React$PureComponent);\n\n  var _super = _createSuper(Points);\n\n  function Points(props) {\n    var _this;\n\n    _classCallCheck(this, Points);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectedSlice: {\n        label: \"\",\n        value: 0\n      },\n      labelWidth: 0\n    };\n    return _this;\n  }\n\n  _createClass(Points, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          labelWidth = _this$state.labelWidth,\n          selectedSlice = _this$state.selectedSlice;\n      var label = selectedSlice.label,\n          value = selectedSlice.value;\n      var keys = [\"google\", \"facebook\", \"linkedin\", \"youtube\", \"Twitter\"];\n      var values = [15, 25, 35, 45, 55];\n      var colors = [\"#600080\", \"#9900cc\", \"#c61aff\", \"#d966ff\", \"#ecb3ff\"];\n      var data = keys.map(function (key, index) {\n        return {\n          key: key,\n          value: values[index],\n          svg: {\n            fill: colors[index]\n          },\n          arc: {\n            outerRadius: 70 + values[index] + \"%\",\n            padAngle: label === key ? 0.1 : 0\n          },\n          onPress: function onPress() {\n            return _this2.setState({\n              selectedSlice: {\n                label: key,\n                value: values[index]\n              }\n            });\n          }\n        };\n      });\n      var deviceWidth = Dimensions.get(\"window\").width;\n      return React.createElement(View, {\n        style: {\n          justifyContent: \"center\",\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, React.createElement(PieChart, {\n        style: {\n          height: screen.height / 2\n        },\n        outerRadius: \"80%\",\n        innerRadius: \"45%\",\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        onLayout: function onLayout(_ref) {\n          var width = _ref.nativeEvent.layout.width;\n\n          _this2.setState({\n            labelWidth: width\n          });\n        },\n        style: {\n          position: \"absolute\",\n          left: deviceWidth / 2 - labelWidth / 2,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, label + \" \\n \" + value));\n    }\n  }]);\n\n  return Points;\n}(React.PureComponent);\n\nexport default Points;","map":{"version":3,"sources":["/Users/catherinelee/Documents/gt/cs4261/Communiteer/src/Stats/Charts/Progress.js"],"names":["React","PieChart","window","Dimensions","get","screen","Points","props","state","selectedSlice","label","value","labelWidth","keys","values","colors","data","map","key","index","svg","fill","arc","outerRadius","padAngle","onPress","setState","deviceWidth","width","justifyContent","flex","height","nativeEvent","layout","position","left","textAlign","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  View,\n  Dimensions\n} from \"react-native\";\nimport { PieChart } from \"react-native-svg-charts\";\n\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nclass Points extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSlice: {\n        label: \"\",\n        value: 0\n      },\n      labelWidth: 0\n    };\n  }\n  render() {\n    const { labelWidth, selectedSlice } = this.state;\n    const { label, value } = selectedSlice;\n    const keys = [\"google\", \"facebook\", \"linkedin\", \"youtube\", \"Twitter\"];\n    const values = [15, 25, 35, 45, 55];\n    const colors = [\"#600080\", \"#9900cc\", \"#c61aff\", \"#d966ff\", \"#ecb3ff\"];\n    const data = keys.map((key, index) => {\n      return {\n        key,\n        value: values[index],\n        svg: { fill: colors[index] },\n        arc: { outerRadius: (70 + values[index]) + \"%\", padAngle: label === key ? 0.1 : 0 },\n        onPress: () => this.setState({ selectedSlice: { label: key, value: values[index] } })\n      };\n    });\n    const deviceWidth = Dimensions.get(\"window\").width;\n\n    return (\n      <View style={{ justifyContent: \"center\", flex: 1 }}>\n        <PieChart\n          style={{ height: screen.height/2 }}\n          outerRadius={\"80%\"}\n          innerRadius={\"45%\"}\n          data={data}\n        />\n        <Text\n          onLayout={({ nativeEvent: { layout: { width } } }) => {\n            this.setState({ labelWidth: width });\n          }}\n          style={{\n            position: \"absolute\",\n            left: deviceWidth / 2 - labelWidth / 2,\n            textAlign: \"center\"\n          }}>\n          {`${label} \\n ${value}`}\n        </Text>\n      </View>\n    );\n  }\n}\n\nexport default Points;"]},"metadata":{},"sourceType":"module"}